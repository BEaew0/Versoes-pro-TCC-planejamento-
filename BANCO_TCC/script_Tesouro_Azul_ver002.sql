-- Criação do banco de dados
CREATE DATABASE IF NOT EXISTS BANCO_TESOURO_AZUL;
USE BANCO_TESOURO_AZUL;

-- Tabela TB_TIPO_ASSINATURA
CREATE TABLE IF NOT EXISTS TB_TIPO_ASSINATURA (
    ID_TIPO INT AUTO_INCREMENT PRIMARY KEY,
    DESC_TIPO VARCHAR(20) NOT NULL UNIQUE
) ENGINE=InnoDB;

-- Inserção de tipos de assinatura
INSERT INTO TB_TIPO_ASSINATURA (DESC_TIPO) VALUES ('normal'), ('assinante');

-- Tabela TB_ASSINATURA
CREATE TABLE IF NOT EXISTS TB_ASSINATURA (
    ID_ASSINATURA INT AUTO_INCREMENT PRIMARY KEY,
    DESC_ASSINATURA VARCHAR(50) NOT NULL UNIQUE,
    VALOR_ASSINATURA DECIMAL(7,2) NOT NULL,
    TIPO_ASSINATURA_FK INT NOT NULL,
    DURACAO_SEGUNDOS_ASSINATURA INT NOT NULL, -- duração em segundos
    FOREIGN KEY (TIPO_ASSINATURA_FK) REFERENCES TB_TIPO_ASSINATURA(ID_TIPO)
) ENGINE=InnoDB;

-- Inserção de assinaturas
INSERT INTO TB_ASSINATURA (DESC_ASSINATURA, VALOR_ASSINATURA, TIPO_ASSINATURA_FK, DURACAO_SEGUNDOS_ASSINATURA) 
VALUES ('Plano Normal', 0.00, 1, 0), ('Plano Premium', 50.00, 2, 15552000); -- 180 dias

-- Tabela TB_USUARIO
CREATE TABLE IF NOT EXISTS TB_USUARIO (
    ID_USUARIO INT AUTO_INCREMENT PRIMARY KEY,
    NOME_USUARIO VARCHAR(80) NOT NULL UNIQUE,
    EMAIL_USUARIO VARCHAR(35) NOT NULL UNIQUE CHECK (EMAIL_USUARIO LIKE '%@%'),
    DATA_NASC_USUARIO DATE NOT NULL,
    CPF_USUARIO CHAR(11) NOT NULL UNIQUE,
    CNPJ_USUARIO CHAR(14),
    ID_ASSINATURA_FK INT NOT NULL,
    SENHA_USUARIO VARCHAR(255) NOT NULL CHECK (LENGTH(SENHA_USUARIO) BETWEEN 8 AND 20),
    FOTO_USUARIO MEDIUMBLOB,
    STATUS_USUARIO CHAR(1) NOT NULL DEFAULT 'a', -- 'a'=ativo, 'd'=desativado
    DATA_INICIO_ASSINATURA_USUARIO DATETIME DEFAULT CURRENT_TIMESTAMP,
    DATA_VALIDADE_ASSINATURA_USUARIO DATETIME,
    FOREIGN KEY (ID_ASSINATURA_FK) REFERENCES TB_ASSINATURA(ID_ASSINATURA)
) ENGINE=InnoDB;

-- Tabela TB_FORNECEDOR
CREATE TABLE IF NOT EXISTS TB_FORNECEDOR (
    ID_FORNECEDOR INT AUTO_INCREMENT PRIMARY KEY,
    NOME_FORNECEDOR VARCHAR(40) NOT NULL UNIQUE,
    CNPJ_FORNECEDOR CHAR(20) NOT NULL UNIQUE,
    EMAIL_FORNECEDOR VARCHAR(35) NOT NULL CHECK (EMAIL_FORNECEDOR LIKE '%@%'),
    TEL_FORNECEDOR CHAR(9) UNIQUE,
    CEL_FORNECEDOR CHAR(15) NOT NULL UNIQUE,
    ENDERECO_FORNECEDOR VARCHAR(50) NOT NULL
) ENGINE=InnoDB;

-- Tabela TB_PRODUTO
CREATE TABLE IF NOT EXISTS TB_PRODUTO (
    ID_PRODUTO INT AUTO_INCREMENT PRIMARY KEY,
    ID_USUARIO_FK INT NOT NULL,
    COD_PRODUTO VARCHAR(80) NOT NULL UNIQUE,
    NOME_PRODUTO VARCHAR(20) NOT NULL UNIQUE,
    TIPO_PRODUTO VARCHAR(40) NOT NULL,
    DATA_VAL_PRODUTO DATE,
    IMG_PRODUTO TEXT,
    FOREIGN KEY (ID_USUARIO_FK) REFERENCES TB_USUARIO(ID_USUARIO)
) ENGINE=InnoDB;

-- Tabela TB_PEDIDO_COMPRA
CREATE TABLE IF NOT EXISTS TB_PEDIDO_COMPRA (
    ID_COMPRA INT AUTO_INCREMENT PRIMARY KEY,
    ID_USUARIO_FK INT NOT NULL,
    ID_FORNECEDOR_FK INT NOT NULL,
    DATA_COMPRA DATE NOT NULL,
    QTD_COMPRA DECIMAL(5,2) NOT NULL,
    COD_LOTE_COMPRA VARCHAR(13) NOT NULL UNIQUE,
    NOME_PRODUTO_PEDIDO VARCHAR(50) NOT NULL,
    VALOR_PEDIDO DECIMAL(7,2) NOT NULL,
    FOREIGN KEY (ID_USUARIO_FK) REFERENCES TB_USUARIO(ID_USUARIO),
    FOREIGN KEY (ID_FORNECEDOR_FK) REFERENCES TB_FORNECEDOR(ID_FORNECEDOR)
) ENGINE=InnoDB;

-- Tabela TB_ITEM_COMPRA
CREATE TABLE IF NOT EXISTS TB_ITEM_COMPRA (
    ID_ITEM_COMPRA INT AUTO_INCREMENT PRIMARY KEY,
    ID_PRODUTO INT NOT NULL,
    ID_COMPRA INT NOT NULL,
    LOTE_VENDA VARCHAR(255),
    QUANTIDADE_ITEM NUMERIC(5,2) NOT NULL,
    N_ITEM_COMPRA INT NOT NULL,
    FOREIGN KEY (ID_PRODUTO) REFERENCES TB_PRODUTO(ID_PRODUTO),
    FOREIGN KEY (ID_COMPRA) REFERENCES TB_PEDIDO_COMPRA(ID_COMPRA)
) ENGINE=InnoDB;

-- Tabela TB_PEDIDO_VENDA
CREATE TABLE IF NOT EXISTS TB_PEDIDO_VENDA (
    ID_VENDA INT AUTO_INCREMENT PRIMARY KEY,
    DATA_VENDA DATE NOT NULL,
    VALOR_VENDA NUMERIC(7,2) NOT NULL
) ENGINE=InnoDB;

-- Tabela TB_ITEM_VENDA
CREATE TABLE IF NOT EXISTS TB_ITEM_VENDA (
    ID_ITEM_VENDA INT AUTO_INCREMENT PRIMARY KEY,
    ID_PRODUTO INT NOT NULL,
    ID_VENDA INT NOT NULL,
    LOTE_VENDA VARCHAR(255),
    QTS_ITEM_VENDA NUMERIC(5,2) NOT NULL,
    N_ITEM_VENDA INT NOT NULL,
    FOREIGN KEY (ID_PRODUTO) REFERENCES TB_PRODUTO(ID_PRODUTO),
    FOREIGN KEY (ID_VENDA) REFERENCES TB_PEDIDO_VENDA(ID_VENDA)
) ENGINE=InnoDB;

-- TRIGGERS
-- Trigger para calcular validade da assinatura com base em segundos
DELIMITER //
CREATE TRIGGER TG_BEFORE_INSERT_USUARIO
BEFORE INSERT ON TB_USUARIO
FOR EACH ROW
BEGIN
    DECLARE segundos INT;
    SELECT DURACAO_SEGUNDOS_ASSINATURA INTO segundos FROM TB_ASSINATURA WHERE ID_ASSINATURA = NEW.ID_ASSINATURA_FK;
    SET NEW.DATA_VALIDADE_ASSINATURA_USUARIO = DATE_ADD(NEW.DATA_INICIO_ASSINATURA_USUARIO, INTERVAL segundos SECOND);
END;//
DELIMITER ; 

-- Evento para desativar usuários com assinatura vencida
SET GLOBAL event_scheduler = ON;
DELIMITER //
CREATE EVENT IF NOT EXISTS EV_VERIFICA_ASSINATURAS
ON SCHEDULE EVERY 1 HOUR
DO
BEGIN
    UPDATE TB_USUARIO
    SET STATUS_USUARIO = 'd'
    WHERE DATA_VALIDADE_ASSINATURA <= NOW()
      AND STATUS_USUARIO = 'a';
END;//
DELIMITER ;
