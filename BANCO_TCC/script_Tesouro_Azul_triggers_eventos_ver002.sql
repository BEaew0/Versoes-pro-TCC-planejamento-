-- Triggers e eventos

-- TRIGGERS
-- Trigger para calcular validade da assinatura com base em segundos
DELIMITER //
CREATE TRIGGER TG_BEFORE_INSERT_USUARIO
BEFORE INSERT ON TB_USUARIO
FOR EACH ROW
BEGIN
    DECLARE segundos INT;
    SELECT DURACAO_SEGUNDOS_ASSINATURA INTO segundos FROM TB_ASSINATURA 
    WHERE ID_ASSINATURA = NEW.ID_ASSINATURA_FK;
    SET NEW.DATA_VALIDADE_ASSINATURA_USUARIO = DATE_ADD(NEW.DATA_INICIO_ASSINATURA_USUARIO, INTERVAL segundos SECOND);
END;//
DELIMITER ; 

-- Trigger para calcular VALOR_LUCRO de TB_LUCRO
DELIMITER //
CREATE TRIGGER TG_CALCULA_LUCRO
AFTER INSERT ON TB_ITENS_LUCRO
FOR EACH ROW
BEGIN
    DECLARE v_venda DECIMAL(10,2);
    DECLARE v_compra DECIMAL(10,2);
    DECLARE v_lucro DECIMAL(10,2);

    -- Buscar valores das tabelas relacionadas
    SELECT VALOR_VENDA INTO v_venda FROM TB_PEDIDO_VENDA
    WHERE ID_VENDA = NEW.ID_VENDA_FK;

    SELECT VALOR_PEDIDO INTO v_compra FROM TB_PEDIDO_COMPRA
    WHERE ID_PEDIDO = NEW.ID_COMPRA_FK;

    -- Calcular lucro
    SET v_lucro = v_venda - v_compra;

    -- Atualizar valor do lucro na tabela TB_LUCRO
    UPDATE TB_LUCRO
    SET VALOR_LUCRO = v_lucro
    WHERE ID_LUCRO = NEW.ID_LUCRO_FK;
END;//
DELIMITER ;


-- Triggers relacionados à TB_ESTOQUE_PRODUTO

-- = Trigger que ativa OnCreate de TB_ITEM_COMPRA para adicionar item na tabela  TB_ESTOQUE_PRODUTO
DELIMITER //
CREATE TRIGGER trg_after_insert_item_compra
AFTER INSERT ON TB_ITEM_COMPRA
FOR EACH ROW
BEGIN
  DECLARE v_id_estoque INT;

  SELECT ID_ESTOQUE INTO v_id_estoque
  FROM TB_ESTOQUE_PRODUTO
  WHERE ID_PRODUTO_FK = NEW.ID_PRODUTO_FK AND ID_USUARIO_FK = (
    SELECT ID_USUARIO_FK FROM TB_PEDIDO_COMPRA WHERE ID_PEDIDO_COMPRA = NEW.ID_PEDIDO_FK
  );

  IF v_id_estoque IS NULL THEN
    INSERT INTO TB_ESTOQUE_PRODUTO (
      ID_PRODUTO_FK, ID_USUARIO_FK, QTD_TOTAL_ESTOQUE, VALOR_GASTO_TOTAL_ESTOQUE
    ) VALUES (
      NEW.ID_PRODUTO_FK,
      (SELECT ID_USUARIO_FK FROM TB_PEDIDO_COMPRA WHERE ID_PEDIDO_COMPRA = NEW.ID_PEDIDO_FK),
      NEW.QUANTIDADE_ITEM_COMPRA * NEW.N_ITEM_COMPRA,
      (SELECT VALOR_PEDIDO FROM TB_PEDIDO_COMPRA WHERE ID_PEDIDO_COMPRA = NEW.ID_PEDIDO_FK)
    );
  ELSE
    UPDATE TB_ESTOQUE_PRODUTO
    SET
      QTD_TOTAL_ESTOQUE = QTD_TOTAL_ESTOQUE + (NEW.QUANTIDADE_ITEM_COMPRA * NEW.N_ITEM_COMPRA),
      VALOR_GASTO_TOTAL_ESTOQUE = VALOR_GASTO_TOTAL_ESTOQUE + (
        SELECT VALOR_PEDIDO FROM TB_PEDIDO_COMPRA WHERE ID_PEDIDO_COMPRA = NEW.ID_PEDIDO_FK
      )
    WHERE ID_ESTOQUE = v_id_estoque;
  END IF;
END;
//
DELIMITER ;

-- = Trigger que ativa OnDelete para remover item na tabela TB_ESTOQUE_PRODUTO
DELIMITER //
CREATE TRIGGER trg_after_delete_item_compra
AFTER DELETE ON TB_ITEM_COMPRA
FOR EACH ROW
BEGIN
  DECLARE v_id_estoque INT;

  SELECT ID_ESTOQUE INTO v_id_estoque
  FROM TB_ESTOQUE_PRODUTO
  WHERE ID_PRODUTO_FK = OLD.ID_PRODUTO_FK AND ID_USUARIO_FK = (
    SELECT ID_USUARIO_FK FROM TB_PEDIDO_COMPRA WHERE ID_PEDIDO_COMPRA = OLD.ID_PEDIDO_FK
  );

  IF v_id_estoque IS NOT NULL THEN
    UPDATE TB_ESTOQUE_PRODUTO
    SET
      QTD_TOTAL_ESTOQUE = QTD_TOTAL_ESTOQUE - (OLD.QUANTIDADE_ITEM_COMPRA * OLD.N_ITEM_COMPRA),
      VALOR_GASTO_TOTAL_ESTOQUE = VALOR_GASTO_TOTAL_ESTOQUE - (
        SELECT VALOR_PEDIDO FROM TB_PEDIDO_COMPRA WHERE ID_PEDIDO_COMPRA = OLD.ID_PEDIDO_FK
      )
    WHERE ID_ESTOQUE = v_id_estoque;
  END IF;
END;
//
DELIMITER ;

-- = Trigger que ativa OnUpdate para atualizar item na tabela TB_ESTOQUE_PRODUTO
DELIMITER //
CREATE TRIGGER trg_after_insert_item_venda
AFTER INSERT ON TB_ITEM_VENDA
FOR EACH ROW
BEGIN
  DECLARE v_id_estoque INT;

  SELECT ID_ESTOQUE INTO v_id_estoque
  FROM TB_ESTOQUE_PRODUTO
  WHERE ID_PRODUTO_FK = NEW.ID_PRODUTO AND ID_USUARIO_FK = (
    SELECT ID_USUARIO_FK FROM TB_PEDIDO_VENDA WHERE ID_VENDA = NEW.ID_VENDA
  );

  IF v_id_estoque IS NOT NULL THEN
    UPDATE TB_ESTOQUE_PRODUTO
    SET
      QTD_TOTAL_ESTOQUE = QTD_TOTAL_ESTOQUE - (NEW.QTS_ITEM_VENDA * NEW.N_ITEM_VENDA),
      VALOR_POTENCIAL_VENDA_ESTOQUE = VALOR_POTENCIAL_VENDA_ESTOQUE - NEW.DESCONTO_ITEM_VENDA
    WHERE ID_ESTOQUE = v_id_estoque;
  END IF;
END;
//
DELIMITER ;


-- Trigger relacionados à TB_PEDIDO_COMRPA

-- = Trigger que ativa OnCreate para acresentar o VALOR_PEDIDO na tabela TB_PEDIDO_COMPRA
DELIMITER //
CREATE TRIGGER trg_after_delete_item_venda
AFTER DELETE ON TB_ITEM_VENDA
FOR EACH ROW
BEGIN
  DECLARE v_id_estoque INT;

  SELECT ID_ESTOQUE INTO v_id_estoque
  FROM TB_ESTOQUE_PRODUTO
  WHERE ID_PRODUTO_FK = OLD.ID_PRODUTO AND ID_USUARIO_FK = (
    SELECT ID_USUARIO_FK FROM TB_PEDIDO_VENDA WHERE ID_VENDA = OLD.ID_VENDA
  );

  IF v_id_estoque IS NOT NULL THEN
    UPDATE TB_ESTOQUE_PRODUTO
    SET
      QTD_TOTAL_ESTOQUE = QTD_TOTAL_ESTOQUE + (OLD.QTS_ITEM_VENDA * OLD.N_ITEM_VENDA),
      VALOR_POTENCIAL_VENDA_ESTOQUE = VALOR_POTENCIAL_VENDA_ESTOQUE + OLD.DESCONTO_ITEM_VENDA
    WHERE ID_ESTOQUE = v_id_estoque;
  END IF;
END;
//
DELIMITER ;

-- = Trigger que ativa OnDelete para remover o VALOR_PEDIDO na tabela TB_PEDIDO_COMPRA
DELIMITER ?
CREATE TRIGGER trg_atualiza_valor_pedido_delete
AFTER DELETE ON TB_ITEM_COMPRA
FOR EACH ROW
BEGIN
    UPDATE TB_PEDIDO_COMPRA
    SET VALOR_PEDIDO = VALOR_PEDIDO - OLD.VALOR_TOTAL
    WHERE ID_PEDIDO_COMPRA = OLD.ID_PEDIDO_COMPRA_FK;
END;
?
DELIMITER ;

-- = Trigger que ativa OnUpdate para atualizar o VALOR_PEDIDO na tabela TB_PEDIDO_COMPRA
DELIMITER ?
CREATE TRIGGER trg_atualiza_valor_pedido_update
AFTER UPDATE ON TB_ITEM_COMPRA
FOR EACH ROW
BEGIN
    UPDATE TB_PEDIDO_COMPRA
    SET VALOR_PEDIDO = VALOR_PEDIDO - OLD.VALOR_TOTAL + NEW.VALOR_TOTAL
    WHERE ID_PEDIDO_COMPRA = NEW.ID_PEDIDO_COMPRA_FK;
END;
?
DELIMITER ;

-- EVENTOS
-- Evento para desativar usuários com assinatura vencida
SET GLOBAL event_scheduler = ON;
DELIMITER //
CREATE EVENT IF NOT EXISTS EV_VERIFICA_ASSINATURA_USUARIO
ON SCHEDULE EVERY 1 HOUR
DO
BEGIN
    UPDATE TB_USUARIO
    SET ID_ASSINATURA_FK = 1
    WHERE DATA_VALIDADE_ASSINATURA <= NOW();
END;//
DELIMITER ;

-- Evento para conta desativada mais de um mês para excluir ela
